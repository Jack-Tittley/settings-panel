/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/apexcharts@3.45.2/src/charts/common/bar/Helpers.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Fill from"../../../modules/Fill";import Graphics from"../../../modules/Graphics";import Series from"../../../modules/Series";import Utils from"../../../utils/Utils";export default class Helpers{constructor(t){this.w=t.w,this.barCtx=t}initVariables(t){const r=this.w;this.barCtx.series=t,this.barCtx.totalItems=0,this.barCtx.seriesLen=0,this.barCtx.visibleI=-1,this.barCtx.visibleItems=1;for(let s=0;s<t.length;s++)if(t[s].length>0&&(this.barCtx.seriesLen=this.barCtx.seriesLen+1,this.barCtx.totalItems+=t[s].length),r.globals.isXNumeric)for(let i=0;i<t[s].length;i++)r.globals.seriesX[s][i]>r.globals.minX&&r.globals.seriesX[s][i]<r.globals.maxX&&this.barCtx.visibleItems++;else this.barCtx.visibleItems=r.globals.dataPoints;0===this.barCtx.seriesLen&&(this.barCtx.seriesLen=1),this.barCtx.zeroSerieses=[],r.globals.comboCharts||this.checkZeroSeries({series:t})}initialPositions(){let t,r,s,i,a,e,o,l,n=this.w,h=n.globals.dataPoints;this.barCtx.isRangeBar&&(h=n.globals.labels.length);let b=this.barCtx.seriesLen;if(n.config.plotOptions.bar.rangeBarGroupRows&&(b=1),this.barCtx.isHorizontal)s=n.globals.gridHeight/h,a=s/b,n.globals.isXNumeric&&(s=n.globals.gridHeight/this.barCtx.totalItems,a=s/this.barCtx.seriesLen),a=a*parseInt(this.barCtx.barOptions.barHeight,10)/100,-1===String(this.barCtx.barOptions.barHeight).indexOf("%")&&(a=parseInt(this.barCtx.barOptions.barHeight,10)),l=this.barCtx.baseLineInvertedY+n.globals.padHorizontal+(this.barCtx.isReversed?n.globals.gridWidth:0)-(this.barCtx.isReversed?2*this.barCtx.baseLineInvertedY:0),this.barCtx.isFunnel&&(l=n.globals.gridWidth/2),r=(s-a*this.barCtx.seriesLen)/2;else{if(i=n.globals.gridWidth/this.barCtx.visibleItems,n.config.xaxis.convertedCatToNumeric&&(i=n.globals.gridWidth/n.globals.dataPoints),e=i/b*parseInt(this.barCtx.barOptions.columnWidth,10)/100,n.globals.isXNumeric){let t=this.barCtx.xRatio;n.globals.minXDiff&&.5!==n.globals.minXDiff&&n.globals.minXDiff/t>0&&(i=n.globals.minXDiff/t),e=i/b*parseInt(this.barCtx.barOptions.columnWidth,10)/100,e<1&&(e=1)}-1===String(this.barCtx.barOptions.columnWidth).indexOf("%")&&(e=parseInt(this.barCtx.barOptions.columnWidth,10)),o=n.globals.gridHeight-this.barCtx.baseLineY[this.barCtx.yaxisIndex]-(this.barCtx.isReversed?n.globals.gridHeight:0)+(this.barCtx.isReversed?2*this.barCtx.baseLineY[this.barCtx.yaxisIndex]:0),t=n.globals.padHorizontal+(i-e*this.barCtx.seriesLen)/2}return n.globals.barHeight=a,n.globals.barWidth=e,{x:t,y:r,yDivision:s,xDivision:i,barHeight:a,barWidth:e,zeroH:o,zeroW:l}}initializeStackedPrevVars(t){const r=t.w;r.globals.hasSeriesGroups?r.globals.seriesGroups.forEach((r=>{t[r]||(t[r]={}),t[r].prevY=[],t[r].prevX=[],t[r].prevYF=[],t[r].prevXF=[],t[r].prevYVal=[],t[r].prevXVal=[]})):(t.prevY=[],t.prevX=[],t.prevYF=[],t.prevXF=[],t.prevYVal=[],t.prevXVal=[])}initializeStackedXYVars(t){const r=t.w;r.globals.hasSeriesGroups?r.globals.seriesGroups.forEach((r=>{t[r]||(t[r]={}),t[r].xArrj=[],t[r].xArrjF=[],t[r].xArrjVal=[],t[r].yArrj=[],t[r].yArrjF=[],t[r].yArrjVal=[]})):(t.xArrj=[],t.xArrjF=[],t.xArrjVal=[],t.yArrj=[],t.yArrjF=[],t.yArrjVal=[])}getPathFillColor(t,r,s,i){const a=this.w;let e=new Fill(this.barCtx.ctx),o=null,l=this.barCtx.barOptions.distributed?s:r;if(this.barCtx.barOptions.colors.ranges.length>0){this.barCtx.barOptions.colors.ranges.map((i=>{t[r][s]>=i.from&&t[r][s]<=i.to&&(o=i.color)}))}return a.config.series[r].data[s]&&a.config.series[r].data[s].fillColor&&(o=a.config.series[r].data[s].fillColor),e.fillPath({seriesNumber:this.barCtx.barOptions.distributed?l:i,dataPointIndex:s,color:o,value:t[r][s],fillConfig:a.config.series[r].data[s]?.fill,fillType:a.config.series[r].data[s]?.fill?.type?a.config.series[r].data[s]?.fill.type:Array.isArray(a.config.fill.type)?a.config.fill.type[r]:a.config.fill.type})}getStrokeWidth(t,r,s){let i=0;const a=this.w;return void 0===this.barCtx.series[t][r]||null===this.barCtx.series[t][r]?this.barCtx.isNullValue=!0:this.barCtx.isNullValue=!1,a.config.stroke.show&&(this.barCtx.isNullValue||(i=Array.isArray(this.barCtx.strokeWidth)?this.barCtx.strokeWidth[s]:this.barCtx.strokeWidth)),i}shouldApplyRadius(t){const r=this.w;let s=!1;return r.config.plotOptions.bar.borderRadius>0&&(r.config.chart.stacked&&"last"===r.config.plotOptions.bar.borderRadiusWhenStacked?this.barCtx.lastActiveBarSerieIndex===t&&(s=!0):s=!0),s}barBackground({j:t,i:r,x1:s,x2:i,y1:a,y2:e,elSeries:o}){const l=this.w,n=new Graphics(this.barCtx.ctx);let h=new Series(this.barCtx.ctx).getActiveConfigSeriesIndex();if(this.barCtx.barOptions.colors.backgroundBarColors.length>0&&h===r){t>=this.barCtx.barOptions.colors.backgroundBarColors.length&&(t%=this.barCtx.barOptions.colors.backgroundBarColors.length);let r=this.barCtx.barOptions.colors.backgroundBarColors[t],h=n.drawRect(void 0!==s?s:0,void 0!==a?a:0,void 0!==i?i:l.globals.gridWidth,void 0!==e?e:l.globals.gridHeight,this.barCtx.barOptions.colors.backgroundBarRadius,r,this.barCtx.barOptions.colors.backgroundBarOpacity);o.add(h),h.node.classList.add("apexcharts-backgroundBar")}}getColumnPaths({barWidth:t,barXPosition:r,y1:s,y2:i,strokeWidth:a,seriesGroup:e,realIndex:o,i:l,j:n,w:h}){const b=new Graphics(this.barCtx.ctx);(a=Array.isArray(a)?a[o]:a)||(a=0);let d=t,g=r;h.config.series[o].data[n]?.columnWidthOffset&&(g=r-h.config.series[o].data[n].columnWidthOffset/2,d=t+h.config.series[o].data[n].columnWidthOffset);const x=g,c=g+d;s+=.001,i+=.001;let p=b.move(x,s),u=b.move(x,s);const C=b.line(c-a,s);if(h.globals.previousPaths.length>0&&(u=this.barCtx.getPreviousPath(o,n,!1)),p=p+b.line(x,i)+b.line(c-a,i)+b.line(c-a,s)+("around"===h.config.plotOptions.bar.borderRadiusApplication?" Z":" z"),u=u+b.line(x,s)+C+C+C+C+C+b.line(x,s)+("around"===h.config.plotOptions.bar.borderRadiusApplication?" Z":" z"),this.shouldApplyRadius(o)&&(p=b.roundPathCorners(p,h.config.plotOptions.bar.borderRadius)),h.config.chart.stacked){let t=this.barCtx;h.globals.hasSeriesGroups&&e&&(t=this.barCtx[e]),t.yArrj.push(i),t.yArrjF.push(Math.abs(s-i)),t.yArrjVal.push(this.barCtx.series[l][n])}return{pathTo:p,pathFrom:u}}getBarpaths({barYPosition:t,barHeight:r,x1:s,x2:i,strokeWidth:a,seriesGroup:e,realIndex:o,i:l,j:n,w:h}){const b=new Graphics(this.barCtx.ctx);(a=Array.isArray(a)?a[o]:a)||(a=0);let d=t,g=r;h.config.series[o].data[n]?.barHeightOffset&&(d=t-h.config.series[o].data[n].barHeightOffset/2,g=r+h.config.series[o].data[n].barHeightOffset);const x=d,c=d+g;s+=.001,i+=.001;let p=b.move(s,x),u=b.move(s,x);h.globals.previousPaths.length>0&&(u=this.barCtx.getPreviousPath(o,n,!1));const C=b.line(s,c-a);if(p=p+b.line(i,x)+b.line(i,c-a)+C+("around"===h.config.plotOptions.bar.borderRadiusApplication?" Z":" z"),u=u+b.line(s,x)+C+C+C+C+C+b.line(s,x)+("around"===h.config.plotOptions.bar.borderRadiusApplication?" Z":" z"),this.shouldApplyRadius(o)&&(p=b.roundPathCorners(p,h.config.plotOptions.bar.borderRadius)),h.config.chart.stacked){let t=this.barCtx;h.globals.hasSeriesGroups&&e&&(t=this.barCtx[e]),t.xArrj.push(i),t.xArrjF.push(Math.abs(s-i)),t.xArrjVal.push(this.barCtx.series[l][n])}return{pathTo:p,pathFrom:u}}checkZeroSeries({series:t}){let r=this.w;for(let s=0;s<t.length;s++){let i=0;for(let a=0;a<t[r.globals.maxValsInArrayIndex].length;a++)i+=t[s][a];0===i&&this.barCtx.zeroSerieses.push(s)}}getXForValue(t,r,s=!0){let i=s?r:null;return null!=t&&(i=r+t/this.barCtx.invertedYRatio-2*(this.barCtx.isReversed?t/this.barCtx.invertedYRatio:0)),i}getYForValue(t,r,s=!0){let i=s?r:null;return null!=t&&(i=r-t/this.barCtx.yRatio[this.barCtx.yaxisIndex]+2*(this.barCtx.isReversed?t/this.barCtx.yRatio[this.barCtx.yaxisIndex]:0)),i}getGoalValues(t,r,s,i,a){const e=this.w;let o=[];const l=(i,a)=>{o.push({[t]:"x"===t?this.getXForValue(i,r,!1):this.getYForValue(i,s,!1),attrs:a})};if(e.globals.seriesGoals[i]&&e.globals.seriesGoals[i][a]&&Array.isArray(e.globals.seriesGoals[i][a])&&e.globals.seriesGoals[i][a].forEach((t=>{l(t.value,t)})),this.barCtx.barOptions.isDumbbell&&e.globals.seriesRange.length){let r=this.barCtx.barOptions.dumbbellColors?this.barCtx.barOptions.dumbbellColors:e.globals.colors;const s={strokeHeight:"x"===t?0:e.globals.markers.size[i],strokeWidth:"x"===t?e.globals.markers.size[i]:0,strokeDashArray:0,strokeLineCap:"round",strokeColor:Array.isArray(r[i])?r[i][0]:r[i]};l(e.globals.seriesRangeStart[i][a],s),l(e.globals.seriesRangeEnd[i][a],{...s,strokeColor:Array.isArray(r[i])?r[i][1]:r[i]})}return o}drawGoalLine({barXPosition:t,barYPosition:r,goalX:s,goalY:i,barWidth:a,barHeight:e}){let o=new Graphics(this.barCtx.ctx);const l=o.group({className:"apexcharts-bar-goals-groups"});l.node.classList.add("apexcharts-element-hidden"),this.barCtx.w.globals.delayedElements.push({el:l.node}),l.attr("clip-path",`url(#gridRectMarkerMask${this.barCtx.w.globals.cuid})`);let n=null;return this.barCtx.isHorizontal?Array.isArray(s)&&s.forEach((t=>{let s=void 0!==t.attrs.strokeHeight?t.attrs.strokeHeight:e/2,i=r+s+e/2;n=o.drawLine(t.x,i-2*s,t.x,i,t.attrs.strokeColor?t.attrs.strokeColor:void 0,t.attrs.strokeDashArray,t.attrs.strokeWidth?t.attrs.strokeWidth:2,t.attrs.strokeLineCap),l.add(n)})):Array.isArray(i)&&i.forEach((r=>{let s=void 0!==r.attrs.strokeWidth?r.attrs.strokeWidth:a/2,i=t+s+a/2;n=o.drawLine(i-2*s,r.y,i,r.y,r.attrs.strokeColor?r.attrs.strokeColor:void 0,r.attrs.strokeDashArray,r.attrs.strokeHeight?r.attrs.strokeHeight:2,r.attrs.strokeLineCap),l.add(n)})),l}drawBarShadow({prevPaths:t,currPaths:r,color:s}){const i=this.w,{x:a,x1:e,barYPosition:o}=t,{x:l,x1:n,barYPosition:h}=r,b=o+r.barHeight,d=new Graphics(this.barCtx.ctx),g=new Utils,x=d.move(e,b)+d.line(a,b)+d.line(l,h)+d.line(n,h)+d.line(e,b)+("around"===i.config.plotOptions.bar.borderRadiusApplication?" Z":" z");return d.drawPath({d:x,fill:g.shadeColor(.5,Utils.rgb2hex(s)),stroke:"none",strokeWidth:0,fillOpacity:1,classes:"apexcharts-bar-shadows"})}getZeroValueEncounters({i:t,j:r}){const s=this.w;let i=0,a=0;return s.globals.seriesPercent.forEach(((s,e)=>{s[r]&&i++,e<t&&0===s[r]&&a++})),{nonZeroColumns:i,zeroEncounters:a}}}
//# sourceMappingURL=/sm/e2b3cb49a9f2ff4cbf082cbb706d334ee5dece1f1a4be84ef599bd97a6e67260.map