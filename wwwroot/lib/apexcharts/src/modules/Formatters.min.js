/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/apexcharts@3.45.2/src/modules/Formatters.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import DateTime from"../utils/DateTime";import Utils from"../utils/Utils";class Formatters{constructor(t){this.ctx=t,this.w=t.w,this.tooltipKeyFormat="dd MMM"}xLabelFormat(t,o,a,e){let r=this.w;if("datetime"===r.config.xaxis.type&&void 0===r.config.xaxis.labels.formatter&&void 0===r.config.tooltip.x.formatter){let t=new DateTime(this.ctx);return t.formatDate(t.getDate(o),r.config.tooltip.x.format)}return t(o,a,e)}defaultGeneralFormatter(t){return Array.isArray(t)?t.map((t=>t)):t}defaultYFormatter(t,o,a){let e=this.w;return Utils.isNumber(t)&&(t=0!==e.globals.yValueDecimal?t.toFixed(void 0!==o.decimalsInFloat?o.decimalsInFloat:e.globals.yValueDecimal):e.globals.maxYArr[a]-e.globals.minYArr[a]<5?t.toFixed(1):t.toFixed(0)),t}setLabelFormatters(){let t=this.w;return t.globals.xaxisTooltipFormatter=t=>this.defaultGeneralFormatter(t),t.globals.ttKeyFormatter=t=>this.defaultGeneralFormatter(t),t.globals.ttZFormatter=t=>t,t.globals.legendFormatter=t=>this.defaultGeneralFormatter(t),void 0!==t.config.xaxis.labels.formatter?t.globals.xLabelFormatter=t.config.xaxis.labels.formatter:t.globals.xLabelFormatter=o=>{if(Utils.isNumber(o)){if(!t.config.xaxis.convertedCatToNumeric&&"numeric"===t.config.xaxis.type){if(Utils.isNumber(t.config.xaxis.decimalsInFloat))return o.toFixed(t.config.xaxis.decimalsInFloat);{const a=t.globals.maxX-t.globals.minX;return a>0&&a<100?o.toFixed(1):o.toFixed(0)}}if(t.globals.isBarHorizontal){if(t.globals.maxY-t.globals.minYArr<4)return o.toFixed(1)}return o.toFixed(0)}return o},"function"==typeof t.config.tooltip.x.formatter?t.globals.ttKeyFormatter=t.config.tooltip.x.formatter:t.globals.ttKeyFormatter=t.globals.xLabelFormatter,"function"==typeof t.config.xaxis.tooltip.formatter&&(t.globals.xaxisTooltipFormatter=t.config.xaxis.tooltip.formatter),(Array.isArray(t.config.tooltip.y)||void 0!==t.config.tooltip.y.formatter)&&(t.globals.ttVal=t.config.tooltip.y),void 0!==t.config.tooltip.z.formatter&&(t.globals.ttZFormatter=t.config.tooltip.z.formatter),void 0!==t.config.legend.formatter&&(t.globals.legendFormatter=t.config.legend.formatter),t.config.yaxis.forEach(((o,a)=>{void 0!==o.labels.formatter?t.globals.yLabelFormatters[a]=o.labels.formatter:t.globals.yLabelFormatters[a]=e=>t.globals.xyCharts?Array.isArray(e)?e.map((t=>this.defaultYFormatter(t,o,a))):this.defaultYFormatter(e,o,a):e})),t.globals}heatmapLabelFormatters(){const t=this.w;if("heatmap"===t.config.chart.type){t.globals.yAxisScale[0].result=t.globals.seriesNames.slice();let o=t.globals.seriesNames.reduce(((t,o)=>t.length>o.length?t:o),0);t.globals.yAxisScale[0].niceMax=o,t.globals.yAxisScale[0].niceMin=o}}}export default Formatters;
//# sourceMappingURL=/sm/69ee5e738cd94f9159a7ba89b5e534439b39bdce2f2d1dc34fbe7453e4193ee4.map