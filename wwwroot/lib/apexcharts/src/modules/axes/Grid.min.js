/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/apexcharts@3.45.2/src/modules/axes/Grid.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Graphics from"../Graphics";import XAxis from"./XAxis";import AxesUtils from"./AxesUtils";class Grid{constructor(i){this.ctx=i,this.w=i.w;const s=this.w;this.xaxisLabels=s.globals.labels.slice(),this.axesUtils=new AxesUtils(i),this.isRangeBar=s.globals.seriesRange.length&&s.globals.isBarHorizontal,s.globals.timescaleLabels.length>0&&(this.xaxisLabels=s.globals.timescaleLabels.slice())}drawGridArea(i=null){let s=this.w,e=new Graphics(this.ctx);null===i&&(i=e.group({class:"apexcharts-grid"}));let t=e.drawLine(s.globals.padHorizontal,1,s.globals.padHorizontal,s.globals.gridHeight,"transparent"),a=e.drawLine(s.globals.padHorizontal,s.globals.gridHeight,s.globals.gridWidth,s.globals.gridHeight,"transparent");return i.add(a),i.add(t),i}drawGrid(){let i=null;return this.w.globals.axisCharts&&(i=this.renderGrid(),this.drawGridArea(i.el)),i}createGridMask(){let i=this.w,s=i.globals;const e=new Graphics(this.ctx);let t=Array.isArray(i.config.stroke.width)?0:i.config.stroke.width;if(Array.isArray(i.config.stroke.width)){let s=0;i.config.stroke.width.forEach((i=>{s=Math.max(s,i)})),t=s}s.dom.elGridRectMask=document.createElementNS(s.SVGNS,"clipPath"),s.dom.elGridRectMask.setAttribute("id",`gridRectMask${s.cuid}`),s.dom.elGridRectMarkerMask=document.createElementNS(s.SVGNS,"clipPath"),s.dom.elGridRectMarkerMask.setAttribute("id",`gridRectMarkerMask${s.cuid}`),s.dom.elForecastMask=document.createElementNS(s.SVGNS,"clipPath"),s.dom.elForecastMask.setAttribute("id",`forecastMask${s.cuid}`),s.dom.elNonForecastMask=document.createElementNS(s.SVGNS,"clipPath"),s.dom.elNonForecastMask.setAttribute("id",`nonForecastMask${s.cuid}`);const a=i.config.chart.type;let l=0,r=0;("bar"===a||"rangeBar"===a||"candlestick"===a||"boxPlot"===a||i.globals.comboBarCount>0)&&i.globals.isXNumeric&&!i.globals.isBarHorizontal&&(l=i.config.grid.padding.left,r=i.config.grid.padding.right,s.barPadForNumericAxis>l&&(l=s.barPadForNumericAxis,r=s.barPadForNumericAxis)),s.dom.elGridRect=e.drawRect(-t-l-2,2*-t-2,s.gridWidth+t+r+l+4,s.gridHeight+4*t+4,0,"#fff");let o=i.globals.markers.largestSize+1;s.dom.elGridRectMarker=e.drawRect(2*-o,2*-o,s.gridWidth+4*o,s.gridHeight+4*o,0,"#fff"),s.dom.elGridRectMask.appendChild(s.dom.elGridRect.node),s.dom.elGridRectMarkerMask.appendChild(s.dom.elGridRectMarker.node);let d=s.dom.baseEl.querySelector("defs");d.appendChild(s.dom.elGridRectMask),d.appendChild(s.dom.elForecastMask),d.appendChild(s.dom.elNonForecastMask),d.appendChild(s.dom.elGridRectMarkerMask)}_drawGridLines({i:i,x1:s,y1:e,x2:t,y2:a,xCount:l,parent:r}){const o=this.w;if(!(0===i&&o.globals.skipFirstTimelinelabel||i===l-1&&o.globals.skipLastTimelinelabel&&!o.config.xaxis.labels.formatter||"radar"===o.config.chart.type)){o.config.grid.xaxis.lines.show&&this._drawGridLine({i:i,x1:s,y1:e,x2:t,y2:a,xCount:l,parent:r});let d=0;if(o.globals.hasXaxisGroups&&"between"===o.config.xaxis.tickPlacement){const s=o.globals.groups;if(s){let e=0;for(let t=0;e<i&&t<s.length;t++)e+=s[t].cols;e===i&&(d=.6*o.globals.xAxisLabelsHeight)}}new XAxis(this.ctx).drawXaxisTicks(s,d,o.globals.dom.elGraphical)}}_drawGridLine({i:i,x1:s,y1:e,x2:t,y2:a,xCount:l,parent:r}){const o=this.w;let d=!1;const g=r.node.classList.contains("apexcharts-gridlines-horizontal");let n=o.config.grid.strokeDashArray;const c=o.globals.barPadForNumericAxis;(0===e&&0===a||0===s&&0===t)&&(d=!0),e===o.globals.gridHeight&&a===o.globals.gridHeight&&(d=!0),!o.globals.isBarHorizontal||0!==i&&i!==l-1||(d=!0);let h=new Graphics(this).drawLine(s-(g?c:0),e,t+(g?c:0),a,o.config.grid.borderColor,n);h.node.classList.add("apexcharts-gridline"),d&&o.config.grid.show?this.elGridBorders.add(h):r.add(h)}_drawGridBandRect({c:i,x1:s,y1:e,x2:t,y2:a,type:l}){const r=this.w,o=new Graphics(this.ctx),d=r.globals.barPadForNumericAxis;if("column"===l&&"datetime"===r.config.xaxis.type)return;const g=r.config.grid[l].colors[i];let n=o.drawRect(s-("row"===l?d:0),e,t+("row"===l?2*d:0),a,0,g,r.config.grid[l].opacity);this.elg.add(n),n.attr("clip-path",`url(#gridRectMask${r.globals.cuid})`),n.node.classList.add(`apexcharts-grid-${l}`)}_drawXYLines({xCount:i,tickAmount:s}){const e=this.w,t=({xC:s,x1:e,y1:t,x2:a,y2:l})=>{for(let r=0;r<s;r++)e=this.xaxisLabels[r].position,a=this.xaxisLabels[r].position,this._drawGridLines({i:r,x1:e,y1:t,x2:a,y2:l,xCount:i,parent:this.elgridLinesV})},a=({xC:s,x1:t,y1:a,x2:l,y2:r})=>{for(let o=0;o<s+(e.globals.isXNumeric?0:1);o++)0===o&&1===s&&1===e.globals.dataPoints&&(l=t=e.globals.gridWidth/2),this._drawGridLines({i:o,x1:t,y1:a,x2:l,y2:r,xCount:i,parent:this.elgridLinesV}),l=t+=e.globals.gridWidth/(e.globals.isXNumeric?s-1:s)};if(e.config.grid.xaxis.lines.show||e.config.xaxis.axisTicks.show){let s,l=e.globals.padHorizontal,r=0,o=e.globals.gridHeight;e.globals.timescaleLabels.length?t({xC:i,x1:l,y1:r,x2:s,y2:o}):(e.globals.isXNumeric&&(i=e.globals.xAxisScale.result.length),a({xC:i,x1:l,y1:r,x2:s,y2:o}))}if(e.config.grid.yaxis.lines.show){let i=0,t=0,a=0,l=e.globals.gridWidth,r=s+1;this.isRangeBar&&(r=e.globals.labels.length);for(let o=0;o<r+(this.isRangeBar?1:0);o++)this._drawGridLine({i:o,xCount:r+(this.isRangeBar?1:0),x1:i,y1:t,x2:l,y2:a,parent:this.elgridLinesH}),t+=e.globals.gridHeight/(this.isRangeBar?r:s),a=t}}_drawInvertedXYLines({xCount:i}){const s=this.w;if(s.config.grid.xaxis.lines.show||s.config.xaxis.axisTicks.show){let e,t=s.globals.padHorizontal,a=0,l=s.globals.gridHeight;for(let r=0;r<i+1;r++){s.config.grid.xaxis.lines.show&&this._drawGridLine({i:r,xCount:i+1,x1:t,y1:a,x2:e,y2:l,parent:this.elgridLinesV}),new XAxis(this.ctx).drawXaxisTicks(t,0,s.globals.dom.elGraphical),t=t+s.globals.gridWidth/i+.3,e=t}}if(s.config.grid.yaxis.lines.show){let i=0,e=0,t=0,a=s.globals.gridWidth;for(let l=0;l<s.globals.dataPoints+1;l++)this._drawGridLine({i:l,xCount:s.globals.dataPoints+1,x1:i,y1:e,x2:a,y2:t,parent:this.elgridLinesH}),e+=s.globals.gridHeight/s.globals.dataPoints,t=e}}renderGrid(){let i=this.w,s=new Graphics(this.ctx);this.elg=s.group({class:"apexcharts-grid"}),this.elgridLinesH=s.group({class:"apexcharts-gridlines-horizontal"}),this.elgridLinesV=s.group({class:"apexcharts-gridlines-vertical"}),this.elGridBorders=s.group({class:"apexcharts-grid-borders"}),this.elg.add(this.elgridLinesH),this.elg.add(this.elgridLinesV),i.config.grid.show||(this.elgridLinesV.hide(),this.elgridLinesH.hide(),this.elGridBorders.hide());let e,t=i.globals.yAxisScale.length?i.globals.yAxisScale[0].result.length-1:5;for(let s=0;s<i.globals.series.length&&(void 0!==i.globals.yAxisScale[s]&&(t=i.globals.yAxisScale[s].result.length-1),!(t>2));s++);return!i.globals.isBarHorizontal||this.isRangeBar?(e=this.xaxisLabels.length,this.isRangeBar&&(e--,t=i.globals.labels.length,i.config.xaxis.tickAmount&&i.config.xaxis.labels.formatter&&(e=i.config.xaxis.tickAmount),i.globals.yAxisScale?.[0]?.result?.length>0&&"datetime"!==i.config.xaxis.type&&(e=i.globals.yAxisScale[0].result.length-1)),this._drawXYLines({xCount:e,tickAmount:t})):(e=t,t=i.globals.xTickAmount,this._drawInvertedXYLines({xCount:e,tickAmount:t})),this.drawGridBands(e,t),{el:this.elg,elGridBorders:this.elGridBorders,xAxisTickWidth:i.globals.gridWidth/e}}drawGridBands(i,s){const e=this.w;if(void 0!==e.config.grid.row.colors&&e.config.grid.row.colors.length>0){let i=0,t=0,a=e.globals.gridHeight/s,l=e.globals.gridWidth;for(let r=0,o=0;r<s;r++,o++)o>=e.config.grid.row.colors.length&&(o=0),this._drawGridBandRect({c:o,x1:i,y1:t,x2:l,y2:a,type:"row"}),t+=e.globals.gridHeight/s}if(void 0!==e.config.grid.column.colors&&e.config.grid.column.colors.length>0){const s=e.globals.isBarHorizontal||"on"!==e.config.xaxis.tickPlacement||"category"!==e.config.xaxis.type&&!e.config.xaxis.convertedCatToNumeric?i:i-1;let t=e.globals.padHorizontal,a=0,l=e.globals.padHorizontal+e.globals.gridWidth/s,r=e.globals.gridHeight;for(let o=0,d=0;o<i;o++,d++)d>=e.config.grid.column.colors.length&&(d=0),this._drawGridBandRect({c:d,x1:t,y1:a,x2:l,y2:r,type:"column"}),t+=e.globals.gridWidth/s}}}export default Grid;
//# sourceMappingURL=/sm/dd5373bf6fb1804834f6a8a0a61e360a7f7e66ef3a61a2f32563dfaec15a350c.map