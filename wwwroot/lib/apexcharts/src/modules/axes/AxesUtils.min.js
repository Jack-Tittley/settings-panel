/**
 * Minified by jsDelivr using Terser v5.19.2.
 * Original file: /npm/apexcharts@3.45.2/src/modules/axes/AxesUtils.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import Formatters from"../Formatters";import Graphics from"../Graphics";import CoreUtils from"../CoreUtils";import DateTime from"../../utils/DateTime";export default class AxesUtils{constructor(t){this.ctx=t,this.w=t.w}getLabel(t,e,i,s,a=[],o="12px",r=!0){const l=this.w;let n=void 0===t[s]?"":t[s],c=n,x=l.globals.xLabelFormatter,h=l.config.xaxis.labels.formatter,f=!1,d=new Formatters(this.ctx),g=n;r&&(c=d.xLabelFormat(x,n,g,{i:s,dateFormatter:new DateTime(this.ctx).formatDate,w:l}),void 0!==h&&(c=h(n,t[s],{i:s,dateFormatter:new DateTime(this.ctx).formatDate,w:l})));e.length>0?(f=(t=>{let i=null;return e.forEach((t=>{"month"===t.unit?i="year":"day"===t.unit?i="month":"hour"===t.unit?i="day":"minute"===t.unit&&(i="hour")})),i===t})(e[s].unit),i=e[s].position,c=e[s].value):"datetime"===l.config.xaxis.type&&void 0===h&&(c=""),void 0===c&&(c=""),c=Array.isArray(c)?c:c.toString();let m=new Graphics(this.ctx),u={};u=l.globals.rotateXLabels&&r?m.getTextRects(c,parseInt(o,10),null,`rotate(${l.config.xaxis.labels.rotate} 0 0)`,!1):m.getTextRects(c,parseInt(o,10));const b=!l.config.xaxis.labels.showDuplicates&&this.ctx.timeScale;return!Array.isArray(c)&&(0===c.indexOf("NaN")||0===c.toLowerCase().indexOf("invalid")||c.toLowerCase().indexOf("infinity")>=0||a.indexOf(c)>=0&&b)&&(c=""),{x:i,text:c,textRect:u,isBold:f}}checkLabelBasedOnTickamount(t,e,i){const s=this.w;let a=s.config.xaxis.tickAmount;return"dataPoints"===a&&(a=Math.round(s.globals.gridWidth/120)),a>i||t%Math.round(i/(a+1))==0||(e.text=""),e}checkForOverflowingLabels(t,e,i,s,a){const o=this.w;if(0===t&&o.globals.skipFirstTimelinelabel&&(e.text=""),t===i-1&&o.globals.skipLastTimelinelabel&&(e.text=""),o.config.xaxis.labels.hideOverlappingLabels&&s.length>0){const t=a[a.length-1];e.x<t.textRect.width/(o.globals.rotateXLabels?Math.abs(o.config.xaxis.labels.rotate)/12:1.01)+t.x&&(e.text="")}return e}checkForReversedLabels(t,e){const i=this.w;return i.config.yaxis[t]&&i.config.yaxis[t].reversed&&e.reverse(),e}isYAxisHidden(t){const e=this.w,i=new CoreUtils(this.ctx);return!e.config.yaxis[t].show||!e.config.yaxis[t].showForNullSeries&&i.isSeriesNull(t)&&-1===e.globals.collapsedSeriesIndices.indexOf(t)}getYAxisForeColor(t,e){const i=this.w;return Array.isArray(t)&&i.globals.yAxisScale[e]&&this.ctx.theme.pushExtraColors(t,i.globals.yAxisScale[e].result.length,!1),t}drawYAxisTicks(t,e,i,s,a,o,r){let l=this.w,n=new Graphics(this.ctx),c=l.globals.translateY;if(s.show&&e>0){!0===l.config.yaxis[a].opposite&&(t+=s.width);for(let x=e;x>=0;x--){let h=c+e/10+l.config.yaxis[a].labels.offsetY-1;l.globals.isBarHorizontal&&(h=o*x),"heatmap"===l.config.chart.type&&(h+=o/2);let f=n.drawLine(t+i.offsetX-s.width+s.offsetX,h+s.offsetY,t+i.offsetX+s.offsetX,h+s.offsetY,s.color);r.add(f),c+=o}}}}
//# sourceMappingURL=/sm/270f132c01adf01b6ca104c493a840e9a44f5a1064b761247fd18a2c7196a459.map